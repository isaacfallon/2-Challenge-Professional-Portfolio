* {
  margin: 0;
  padding: 0;
  /* All text on the page is white so I have added it to the 
  universal selector. If I want to change this in the future,
  I will remove it and specify it elsewhere. */
  color: white;
}

body {
  /* 'Lato' is my chosen font but several others have been 
  added as fallbacks for other browsers/systems. */
  font-family: Lato, Arial, Helvetica, sans-serif;
  background-color: #0a1e3f;
}

/* The header houses the 'h1' and 'nav' tags and uses flex-box
properties to ensure they sit on the same horizontal space but 
apart from each other.  */
header {
  background-color: #091a37;
  display: flex;
  /* Pushes all 'header' elements to the end of the flex-box. */
  justify-content: flex-end;
}

h1 {
  /* Using 'margin-right' in 'h1' here moves only the 
  'h1' tag to the left. */
  margin-right: auto;
  font-size: 3.5em;
  padding: 20px;
}

nav {
  display: flex;
  align-items: center;
}

nav a {
  padding: 0 20px;
  font-size: 1.3em;
  /* Underline is removed from nav 'a' elements 
  to keep it looking clean. */
  text-decoration: none;
}

.std-content-box-content p a {
  /* Font size is set across 'p' and 'a' tags within the 
  .std-content-box-content class 
  (almost all of the content on site). */
  font-size: 1em;
  padding: 0;
}

a:hover {
  /* A light opacity drop is added to the links on site 
  to add reactivity. */
  opacity: 0.75;
}

h2 {
  font-size: 3em;
}

/* The following flex-properties have been set to the 
'welcome-area' parent class so my profile image
and welcome text can reside together at the top. */
.welcome-area {
  text-align: center;
  display: flex;
  justify-content: center;
  display: flex;
  align-items: center;
  padding-top: 1.5em;
}

.welcome-area img {
  width: 30em;
  height: 20em;
  border-radius: 25px;
}

.welcome-area-text {
  width: 30em;
}

/* The main content sits within this 'main-content' class
with a width of 60%. This was chosen to keep the main elements
to the center as a design preference. */
.main-content {
  margin: 0 auto;
  width: 60%;
}

/* The 'std-content-box' class contains the main content 
throughout the site. It is re-used to keep the page 
and code clean. */
.std-content-box {
  background-color: #192a47;
  border-radius: 25px;
  padding: 30px;
  display: flex;
  align-items: center;
  margin-top: 1.5em;
}

/* The heading content that sits on the left side of the 
content box container. */
.std-content-box-heading {
  display: flex;
  text-align: center;
  justify-content: center;
  height: 100%;
  border-right: 5px solid white;
  /* I sourced the below code using 'flex-basis' from a 
  MDN web documentation page.
  See README.MD for further details. */
  flex-basis: 50%;
}

/* The text-content that sits on the right side of the 
content box container. */
.std-content-box-content {
  width: 100%;
  display: flex;
  justify-content: space-around;
  padding-left: 3em;
}

/* A separate class is used for the 'my work content box' to ensure
it sits correctly above the project's container below.  */
.my-work-content-box {
  background-color: #192a47;
  border-radius: 25px 25px 0 0;
  padding: 30px;
  display: flex;
  align-items: center;
  margin-top: 1.5em;
}

/* A container class to house the project images themselves. */
.projects-container {
  background-color: #192a47;
  border-radius: 0 0 25px 25px;
  padding: 30px;
  display: flex;
  flex-wrap: wrap;
  justify-content: space-around;
}

/* Attributes for the hero project. It is set to be bigger than the 
secondary projects that are below. */
.hero-project {
  display: flex;
  flex-direction: column;
  width: 100%;
  border: white 5px solid;
  text-align: center;
  background-color: #091a37;
}

/* To ensure the project images link correctly to the project,
an 'a' tag is added for the hero project with flex properties 
to fit the image at all sizes. */
.hero-project a {
  display: flex;
  flex-direction: column;
  height: 25em;
  text-decoration: none;
}

.hero-project figcaption {
  font-size: 1.75em;
}

/* The following code ensures the hero project images always 
fill in their parent div containers. */
.hero-project img {
  height: 0;
  /* I sourced the blow code using 'flex-grow' from 
  MDN web docs documentation.
  See README.MD for full details. */
  flex-grow: 1;
}

/* The secondary project uses almost identical attributes 
to the hero project. The main difference is the size and how they 
react to viewport changes. (See media query selectors below too).  */
.secondary-project {
  display: flex;
  flex-direction: column;
  margin: 20px;
  width: 45%;
  height: 15em;
  text-align: center;
  border: white 3px solid;
  background-color: #091a37;
}

/* Same principle as the hero project for use of 
'a' and 'figcaption' tags. */
.secondary-project a {
  display: flex;
  flex-direction: column;
  height: 25em;
  text-decoration: none;
}

.secondary-project figcaption {
  font-size: 1.25em;
}

.secondary-project img {
  height: 0;
  /* I sourced the blow code using 'flex-grow' from 
  MDN web docs documentation.
  See README.MD for full details. */
  flex-grow: 1;
}

/* An 'a' element is used within the 'std-content-box' area to ensure
to the 'Contact Me' links work correctly. */
.std-content-box a {
  padding: 0 20px;
  font-size: 1.3em;
  text-decoration: none;
}

/* Some 'flex-properties' applied to the footer 
and footer 'p' element to ensure it sits 
correctly to the right. */
footer {
  display: flex;
  justify-content: flex-end;
  height: 3em;
  align-items: center;
  background-color: #091a37;
  margin-top: 1.5em;
}

footer p {
  margin-right: 2em;
  font-size: 1em;
}

/* Media query selectors below */

/* When the viewport is reduced to 1450px or lower.
(Ideal for tablet viewing) */
@media screen and (max-width: 1450px) {
  .secondary-project {
    width: 80%;
  }

  .main-content {
    width: 85%;
  }
}

/* When the viewport is reduced to 800px or lower.
(Ideal for phone viewing) */
@media screen and (max-width: 800px) {
  header {
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
  header h1 {
    margin-right: 0;
  }

  nav {
    /* background-color: red; */
    align-items: center;
    padding-bottom: 15px;
  }

  .welcome-area {
    flex-direction: column;
  }

  .welcome-area-text {
    padding-bottom: 15px;
  }

  .std-content-box {
    flex-direction: column;
  }
  .my-work-content-box {
    flex-direction: column;
  }
  .std-content-box-heading {
    border-right: 0;
  }
  .std-content-box-content {
    flex-direction: column;
    justify-content: center;
    padding-left: 0;
    text-align: center;
  }
}
